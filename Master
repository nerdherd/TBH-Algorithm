import java.util.Scanner;

public class Master {
	
	static boolean first_cross;
	static double last_time, last_encode, last_error, driveApprox, drive_at_zero;
	Scanner scanner;
	
	public static void main(String[] args){
		Scanner scanner = new Scanner(System.in);
		double input = scanner.nextDouble();
		double input2 = scanner.nextDouble();
		double driveSHOW = Master.testTBH(input, input2);
		System.out.println(driveSHOW);
		double input3 = scanner.nextDouble();
		double input4 = scanner.nextDouble();
		double driveSHOW2 = Master.testTBH(input3, input4);
		System.out.println(driveSHOW2);
		double input5 = scanner.nextDouble();
		double input6 = scanner.nextDouble();
		double driveSHOW3 = Master.testTBH(input5, input6);
		System.out.println(driveSHOW3);
	}
	
	public static double testTBH(double encode, double delta_time){
		double current_encode = encode;
    	double time = System.currentTimeMillis();
      double desired = 9000.1;
    	double kp = 1.0/400.0;
    	double drive = 0;
    	double driveApprox = 0.5;
        
    	double delta_encode = current_encode - last_encode;
    	double actualrpm = (delta_encode / delta_time) / 250.0;
    	double error = desired - actualrpm;
    	
    	drive = drive + (error * kp);
    	
    	if (drive > 1) {
    		drive = 1;
    	}
    	if (drive < 0) {
    		drive = 0;
    	}
		
    	if (sign(error) != sign(last_error)) {
    		if (first_cross == false) {
    			drive = driveApprox;
    			first_cross = true;
    		}
    		else {
    			drive = 0.5 * (drive + drive_at_zero);
    		}
    		drive_at_zero = drive;
    	}
    	
    	last_time = time;
    	last_encode = current_encode;
    	last_error = error;
    	
    	return drive;
	}
    public static double sign(double value) {
    	if (value > 0) {
    		return 1;
    	}
    	else if (value < 0) {
    		return -1;
    	}
    	else {
    		return 0;
    	}
    }
	
}
